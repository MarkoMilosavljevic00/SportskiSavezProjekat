// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(SavezContext))]
    [Migration("20220109214629_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Klub", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Klubovi");
                });

            modelBuilder.Entity("Models.Organizator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sportski_objekat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Sredstva")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Organizatori");
                });

            modelBuilder.Entity("Models.Registruje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum_registracije")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KlubID")
                        .HasColumnType("int");

                    b.Property<int?>("TakmicarID")
                        .HasColumnType("int");

                    b.Property<int?>("TakmicenjeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KlubID");

                    b.HasIndex("TakmicarID");

                    b.HasIndex("TakmicenjeID");

                    b.ToTable("Registracije");
                });

            modelBuilder.Entity("Models.Takmicar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sport")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Takmicari");
                });

            modelBuilder.Entity("Models.Takmicenje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum_odrzavanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OrganizatorID")
                        .HasColumnType("int");

                    b.Property<string>("Sport")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("OrganizatorID");

                    b.ToTable("Takmicenja");
                });

            modelBuilder.Entity("Models.Registruje", b =>
                {
                    b.HasOne("Models.Klub", "Klub")
                        .WithMany("Registracije")
                        .HasForeignKey("KlubID");

                    b.HasOne("Models.Takmicar", "Takmicar")
                        .WithMany("Registracije")
                        .HasForeignKey("TakmicarID");

                    b.HasOne("Models.Takmicenje", "Takmicenje")
                        .WithMany("Registracije")
                        .HasForeignKey("TakmicenjeID");

                    b.Navigation("Klub");

                    b.Navigation("Takmicar");

                    b.Navigation("Takmicenje");
                });

            modelBuilder.Entity("Models.Takmicenje", b =>
                {
                    b.HasOne("Models.Organizator", "Organizator")
                        .WithMany("Takmicenja")
                        .HasForeignKey("OrganizatorID");

                    b.Navigation("Organizator");
                });

            modelBuilder.Entity("Models.Klub", b =>
                {
                    b.Navigation("Registracije");
                });

            modelBuilder.Entity("Models.Organizator", b =>
                {
                    b.Navigation("Takmicenja");
                });

            modelBuilder.Entity("Models.Takmicar", b =>
                {
                    b.Navigation("Registracije");
                });

            modelBuilder.Entity("Models.Takmicenje", b =>
                {
                    b.Navigation("Registracije");
                });
#pragma warning restore 612, 618
        }
    }
}
